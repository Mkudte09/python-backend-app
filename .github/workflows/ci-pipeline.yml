name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yml

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GCP VM via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          port: 22
          script: |
            cd ~/python-backend-app
            git pull origin main
            pip3 install --user -r requirements.txt
            pkill -f "python3 app/main.py" || true
            nohup python3 app/main.py > app.log 2>&1 &

  notify:
    needs: [build-and-test, deploy]
    if: always()  # <-- Runs even if previous jobs fail, we'll handle status dynamically
    uses: ./.github/workflows/notify.yml
    with:
      status: ${{ needs.build-and-test.result == 'success' && needs.deploy.result == 'success' && 'success' || 'failure' }}
      environment: 'prod'

